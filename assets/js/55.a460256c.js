(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{268:function(s,e,a){"use strict";a.r(e);var n=a(47),t=Object(n.a)({},function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"用gitlab-ci免费运行定时任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用gitlab-ci免费运行定时任务","aria-hidden":"true"}},[s._v("#")]),s._v(" 用GitLab-CI免费运行定时任务")]),s._v(" "),a("p",[s._v("本文介绍我是如何使用GitLab-CI免费地运行一些需要定时执行的脚本，而不需要在本地/服务器上使用cron job或者一直跑一个后台程序运行中间sleep。")]),s._v(" "),a("p",[s._v("GitLab-CI是GitLab提供的持续集成/部署的工具。当有新代码提交或者其他条件触发时，它就会自动运行脚本执行编译、测试、部署等活动。GitLab-CI每个月提供2,000分钟的免费运行时间，平均一天可以大概跑一个小时。")]),s._v(" "),a("p",[s._v("如果你不用GitLab而是用GitHub的话，Travis CI也免费提供类似功能。")]),s._v(" "),a("p",[s._v("GitLab-CI 和 Travis CI都支持\b定时执行脚本，但是GitLab-CI最多可以支持每小时运行一次，而Travis只支持最多每天运行一次。")]),s._v(" "),a("p",[s._v("那么什么情况下你会需要定试运行脚本呢？比如:")]),s._v(" "),a("ol",[a("li",[s._v("我需要一个脚本每隔一段时间去查询当前比特币价格，当高于指定价格时卖出或者提醒我")]),s._v(" "),a("li",[s._v("我需要一个脚本每隔一段时间查询一个商品的价格，当低于制定价格时提醒我购买")]),s._v(" "),a("li",[s._v("我需要一个脚本每隔一段时间访问一次某个网址（例如为了保持Heroku\b应用处于激活状态)")])]),s._v(" "),a("p",[s._v("下面为了方便起见，我就以情况3举例。")]),s._v(" "),a("p",[s._v("首先在你的repo目录创建一个"),a("code",[s._v(".gitlab-ci.yml")]),s._v("文件:")]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" bash scripts/script_a.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("上述示例定义了一个"),a("code",[s._v("test")]),s._v("任务，并指定了用bash执行"),a("code",[s._v("scripts")]),s._v("目录下的"),a("code",[s._v("script_a.sh")]),s._v("脚本文件")]),s._v(" "),a("p",[s._v("接下来就在"),a("code",[s._v("scripts")]),s._v("目录下创建一个"),a("code",[s._v("script_a.sh")]),s._v("文件:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/bin/sh\ncurl curl http://ip-api.com/json\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("blockquote",[a("p",[s._v("注: job名，脚本目录，脚本名，脚本内容都可以根据具体需要修改，这里只是举例。")])]),s._v(" "),a("p",[s._v("将包含"),a("code",[s._v(".gitlab-ci.yml")]),s._v("和脚本的代码上传至GitLab，即会自动触发任务，去GitLab管理界面左侧的"),a("code",[s._v("CI/CD - Jobs")]),s._v("可以查看任务状态。")]),s._v(" "),a("p",[s._v("进入"),a("code",[s._v("CI/CD - Schedules")]),s._v("可以给任务设置定时，默认提供每天/每周/每月，或者自定义。自定义的设置语法格式和cron一样，不熟悉的可以去 "),a("a",{attrs:{href:"https://crontab.guru",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://crontab.guru"),a("OutboundLink")],1),s._v(" 调试。假如你设置"),a("code",[s._v("* * * * 1-5")]),s._v("就是每周一到周五每分钟都运行，但是GitLab\b貌似有限制，导致实际上只会每周一到周五每小时执行一次。")]),s._v(" "),a("p",[s._v("接下来你的脚本就会按照你设置的时间定时执行了。")]),s._v(" "),a("p",[s._v("如果你去"),a("code",[s._v("CI/CD - Jobs")]),s._v("查看运行日志，可以看到类似如下日志:")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('Running with gitlab-runner 11.1.0 (081978aa)\n  on docker-auto-scale 0277ea0f\nUsing Docker executor with image ruby:2.5 ...\nPulling docker image ruby:2.5 ...\nUsing docker image sha256:1d8640b852eb145393da754ec38a4153edcf473a249448b7a271cea5f06016fa for ruby:2.5 ...\nRunning on runner-0277ea0f-project-7572283-concurrent-0 via runner-0277ea0f-srm-1532409609-e458cf74...\nCloning repository...\nCloning into \'/builds/example/scheduled-jobs\'...\nChecking out 67e03220 as master...\nSkipping Git submodules setup\n$ bash scripts/script_a.sh\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total   Spent    Left  Speed\n\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0\n100   463  100   463    0     0    717      0 --:--:--\n{"as":"AS15169 Google LLC","city":"Mountain View","country":"United States","countryCode":"US","isp":"Googlebot","lat":37.4192,"lon":-122.0574,"org":"Googlebot","query":"66.249.64.149","region":"CA","regionName":"California","status":"success","timezone":"America/Los_Angeles","zip":"94043"}\n --:--:-- --:--:--   716\nJob succeeded\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])])},[],!1,null,null,null);t.options.__file="README.md";e.default=t.exports}}]);